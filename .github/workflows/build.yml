name: Сборка

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
  workflow_dispatch: 

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up JDK17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      - name: Cache
        uses: actions/cache@v4
        with:
          path: '~/.m2/repository'
          key: "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}"
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build
        run: mvn clean package --file pom.xml

      - name: Extract version from pom.xml
        id: extract_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Find built JAR
        id: find_jar
        run: |
          FILE=$(find target -maxdepth 1 -type f -name "*.jar" ! -name "original-*.jar" ! -name "*-shaded.jar" | head -n 1)
          echo "file=$FILE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: PPFSS_Telegram_Dashboard v${{ env.VERSION }}
          body: "Автоматический релиз версии ${{ env.VERSION }}"
          files: ${{ steps.find_jar.outputs.file }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

